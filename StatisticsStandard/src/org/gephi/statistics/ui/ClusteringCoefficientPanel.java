/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClusteringCoefficientPanel.java
 *
 * Created on Jun 22, 2009, 9:58:00 PM
 */

package org.gephi.statistics.ui;

import javax.swing.JPanel;
import org.gephi.statistics.ClusteringCoefficient;
import org.gephi.statistics.api.Statistics;
import org.gephi.statistics.ui.api.StatisticsUI;

/**
 *
 * @author pjmcswee
 */
public class ClusteringCoefficientPanel extends javax.swing.JPanel {

    /** Creates new form ClusteringCoefficientPanel */
    public ClusteringCoefficientPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        directedRadioButton = new javax.swing.JRadioButton();
        undirectedRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        bruteRadioButton = new javax.swing.JRadioButton();
        triangleRadioButton = new javax.swing.JRadioButton();

        buttonGroup1.add(directedRadioButton);
        directedRadioButton.setText(org.openide.util.NbBundle.getMessage(ClusteringCoefficientPanel.class, "ClusteringCoefficientPanel.directedRadioButton.text")); // NOI18N

        buttonGroup1.add(undirectedRadioButton);
        undirectedRadioButton.setText(org.openide.util.NbBundle.getMessage(ClusteringCoefficientPanel.class, "ClusteringCoefficientPanel.undirectedRadioButton.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(ClusteringCoefficientPanel.class, "ClusteringCoefficientPanel.jLabel1.text")); // NOI18N

        buttonGroup2.add(bruteRadioButton);
        bruteRadioButton.setText(org.openide.util.NbBundle.getMessage(ClusteringCoefficientPanel.class, "ClusteringCoefficientPanel.bruteRadioButton.text")); // NOI18N

        buttonGroup2.add(triangleRadioButton);
        triangleRadioButton.setText(org.openide.util.NbBundle.getMessage(ClusteringCoefficientPanel.class, "ClusteringCoefficientPanel.triangleRadioButton.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(undirectedRadioButton)
                            .addComponent(directedRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(triangleRadioButton)
                            .addComponent(bruteRadioButton))
                        .addGap(98, 98, 98))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(122, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directedRadioButton)
                    .addComponent(bruteRadioButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(undirectedRadioButton)
                    .addComponent(triangleRadioButton))
                .addContainerGap(163, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JRadioButton bruteRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton directedRadioButton;
    private javax.swing.JLabel jLabel1;
    protected javax.swing.JRadioButton triangleRadioButton;
    private javax.swing.JRadioButton undirectedRadioButton;
    // End of variables declaration//GEN-END:variables

    public static class ClusteringCoefficientUI implements StatisticsUI {

        private ClusteringCoefficientPanel panel;
        private ClusteringCoefficient clusteringCoefficient;

        public ClusteringCoefficientUI() {
            panel = new ClusteringCoefficientPanel();
        }

        public JPanel getPanel() {
            return panel;
        }

        /**
         *
         * @param statistics
         */
        public void setup(Statistics statistics) {
            this.clusteringCoefficient = (ClusteringCoefficient) statistics;

            panel.directedRadioButton.setSelected(true);
            panel.undirectedRadioButton.setSelected(false);

            panel.bruteRadioButton.setSelected(true);
            panel.triangleRadioButton.setSelected(false);

            clusteringCoefficient.setDirected(true);
            clusteringCoefficient.setBruteForce(true);
        }

        /**
         *
         */
        public void unsetup() {
            //Set params
            boolean directed = panel.directedRadioButton.isSelected();
            clusteringCoefficient.setDirected(directed);
            boolean bruteForce = panel.bruteRadioButton.isSelected();
            clusteringCoefficient.setBruteForce(bruteForce);
        }
    }
}
