/*
Copyright 2008 WebAtlas
Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * DefaultDataLayer.java
 *
 * Created on Jun 21, 2009, 3:45:43 PM
 */

package org.gephi.timeline.ui.layers.impl;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;
import java.awt.image.BufferedImage;
import org.gephi.timeline.ui.skins.api.TimelineSkin;
import org.gephi.timeline.ui.layers.api.DataLayer;

/**
 *
 * @author Julian Bilcke
 */
public class DefaultDataLayer extends DefaultLayer implements DataLayer {

    private static final long serialVersionUID = 1L;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;

       // BufferedImage snapshot = new BufferedImage(getWidth(), getHeight(),
		//		BufferedImage.TYPE_INT_ARGB);
		//Graphics2D graphics2d = snapshot.createGraphics();
		g2d.setRenderingHints(antialiasingHints);

        g2d.setPaint(skin.getDataLayerPaint());

        GeneralPath shape = new GeneralPath();
            /*
        shape.moveTo(1, 1);
        shape.lineTo(2, 2);
        shape.quadTo(3, 3, 4, 4);
        shape.curveTo(5, 5, 6, 6, 7, 7);
        shape.closePath();
            */
    }

    public void setSkin(TimelineSkin skin) {
        this.skin = skin;
    }

}
