/*
Copyright 2008 WebAtlas
Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.ui.ranking;

import java.awt.Color;
import java.util.Arrays;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.gephi.ranking.RankingUIModel;
import org.gephi.ui.components.gradientslider.GradientSlider;

/**
 * @author Mathieu Bastian
 */
public class ColorTransformerPanel extends javax.swing.JPanel {

    /** Creates new form ColorTransformerPanel */
    public ColorTransformerPanel(final RankingUIModel model) {
        initComponents();

        if (model.getRanking() == RankingUIModel.NODE_RANKING) {
            //NODE
            //Gradient
            final GradientSlider gradientSlider = new GradientSlider(GradientSlider.HORIZONTAL, model.getNodeColorTransformerThumbPositions(), model.getNodeColorTransformerColors());
            gradientSlider.putClientProperty("GradientSlider.includeOpacity", "false");
            gradientSlider.addChangeListener(new ChangeListener() {

                public void stateChanged(ChangeEvent e) {
                    Color[] colors = gradientSlider.getColors();
                    float[] positions = gradientSlider.getThumbPositions();
                    model.setNodeColorTransformerColors(Arrays.copyOf(colors, colors.length));
                    model.setNodeColorTransformerThumbPositions(Arrays.copyOf(positions, positions.length));
                }
            });
            gradientPanel.add(gradientSlider);
        } else {
            //EDGE
            //Gradient
            final GradientSlider gradientSlider = new GradientSlider(GradientSlider.HORIZONTAL, model.getEdgeColorTransformerThumbPositions(), model.getEdgeColorTransformerColors());
            gradientSlider.putClientProperty("GradientSlider.includeOpacity", "false");
            gradientSlider.addChangeListener(new ChangeListener() {

                public void stateChanged(ChangeEvent e) {
                    Color[] colors = gradientSlider.getColors();
                    float[] positions = gradientSlider.getThumbPositions();
                    model.setEdgeColorTransformerColors(Arrays.copyOf(colors, colors.length));
                    model.setEdgeColorTransformerThumbPositions(Arrays.copyOf(positions, positions.length));
                }
            });
            gradientPanel.add(gradientSlider);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelColor = new javax.swing.JLabel();
        gradientPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        labelColor.setText(org.openide.util.NbBundle.getMessage(ColorTransformerPanel.class, "ColorTransformerPanel.labelColor.text")); // NOI18N

        gradientPanel.setOpaque(false);
        gradientPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gradientPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gradientPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gradientPanel;
    private javax.swing.JLabel labelColor;
    // End of variables declaration//GEN-END:variables
}
