/*
Copyright 2008 WebAtlas
Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.ui.filters.attribute;

import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.gephi.filters.attribute.AttributeEqualBuilder.EqualNumberFilter;
import org.openide.nodes.Node.Property;
import org.openide.util.WeakListeners;

/**
 *
 * @author Mathieu Bastian
 */
public class EqualNumberPanel extends javax.swing.JPanel implements ChangeListener {

    private EqualNumberFilter filter;

    public EqualNumberPanel() {
        initComponents();
    }

    public void stateChanged(ChangeEvent evt) {
        Property<Number> match = filter.getProperties()[1].getProperty();
        try {
            match.setValue((Number) valueSpinner.getValue());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setup(EqualNumberFilter filter) {
        Number match = filter.getMatch();
        Number stepSize = null;
        switch (filter.getColumn().getType()) {
            case DOUBLE:
                match = (match != null ? match : new Double(0.0));
                stepSize = new Double(.1);
                break;
            case FLOAT:
                match = (match != null ? match : new Float(0f));
                stepSize = new Float(.1f);
                break;
            case LONG:
                match = (match != null ? match : new Long(0l));
                stepSize = new Long(1l);
                break;
            case INT:
                match = (match != null ? match : new Integer(0));
                stepSize = 1;
                break;
            default:
                throw new IllegalArgumentException("Column must be number");
        }
        SpinnerNumberModel model = new SpinnerNumberModel(match, (Comparable) filter.getMinimun(), (Comparable) filter.getMaximum(), stepSize);
        valueSpinner.setModel(model);
        model.addChangeListener(WeakListeners.change(this, model));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelValue = new javax.swing.JLabel();
        valueSpinner = new javax.swing.JSpinner();

        labelValue.setText(org.openide.util.NbBundle.getMessage(EqualNumberPanel.class, "EqualNumberPanel.labelValue.text")); // NOI18N
        add(labelValue);

        valueSpinner.setPreferredSize(new java.awt.Dimension(60, 20));
        add(valueSpinner);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelValue;
    private javax.swing.JSpinner valueSpinner;
    // End of variables declaration//GEN-END:variables
}
