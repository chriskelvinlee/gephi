/*
Copyright 2008-2010 Gephi
Authors : Eduardo Ramos <eduramiba@gmail.com>
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.datalaboratory.impl.manipulators.attributecolumns.mergestrategies.ui;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.gephi.data.attributes.api.AttributeColumn;
import org.gephi.datalaboratory.api.AttributeColumnsMergeStrategiesController.BooleanOperations;
import org.gephi.datalaboratory.impl.manipulators.attributecolumns.mergestrategies.BooleanLogicOperations;
import org.gephi.datalaboratory.spi.Manipulator;
import org.gephi.datalaboratory.spi.ManipulatorUI;

/**
 * UI for BooleanLogicOperations AttributeColumnsMergeStrategy
 * @author Eduardo Ramos <eduramiba@gmail.com>
 */
public class BooleanLogicOperationsUI extends javax.swing.JPanel implements ManipulatorUI {

    private BooleanLogicOperations manipulator;
    private JComboBox[] operationSelectors;

    /** Creates new form BooleanLogicOperationsUI */
    public BooleanLogicOperationsUI() {
        initComponents();
    }

    public void setup(Manipulator m) {
        manipulator = (BooleanLogicOperations) m;
        prepareColumnsAndOperations();
    }

    public void unSetup() {
        BooleanOperations[] booleanOperations=new BooleanOperations[operationSelectors.length];
        for (int i = 0; i < booleanOperations.length; i++) {
            booleanOperations[i]=(BooleanOperations) operationSelectors[i].getSelectedItem();
        }

        manipulator.setBooleanOperations(booleanOperations);
        manipulator.setNewColumnTitle(titleText.getText());
    }

    public String getDisplayName() {
        return manipulator.getName();
    }

    public JPanel getSettingsPanel() {
        return this;
    }

    private void prepareColumnsAndOperations() {
        AttributeColumn[] columns = manipulator.getColumns();
        operationSelectors = new JComboBox[columns.length - 1];

        JLabel columnLabel;
        for (int i = 0; i < columns.length; i++) {
            columnLabel=new JLabel(columns[i].getTitle());
            columnLabel.setHorizontalAlignment(JLabel.CENTER);
            panel.add(columnLabel);
            if (i < columns.length - 1) {
                operationSelectors[i] = prepareOperationSelector();
                panel.add(operationSelectors[i]);
            }
        }
    }

    private JComboBox prepareOperationSelector() {
        JComboBox selector = new JComboBox(BooleanOperations.values());
        return selector;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionLabel = new javax.swing.JLabel();
        scroll = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        titleText = new javax.swing.JTextField();

        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(BooleanLogicOperationsUI.class, "BooleanLogicOperationsUI.descriptionLabel.text")); // NOI18N

        panel.setLayout(new java.awt.GridLayout(0, 1, 0, 20));
        scroll.setViewportView(panel);

        titleLabel.setText(org.openide.util.NbBundle.getMessage(BooleanLogicOperationsUI.class, "BooleanLogicOperationsUI.titleLabel.text")); // NOI18N

        titleText.setText(org.openide.util.NbBundle.getMessage(BooleanLogicOperationsUI.class, "BooleanLogicOperationsUI.titleText.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleText, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleText;
    // End of variables declaration//GEN-END:variables
}
