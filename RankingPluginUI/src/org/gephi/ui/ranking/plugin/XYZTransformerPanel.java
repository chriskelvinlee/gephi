/*
Copyright 2008 WebAtlas
Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.ui.ranking.plugin;

import org.gephi.ranking.api.Ranking;
import org.gephi.ranking.api.XYZTransformer;
import org.gephi.ranking.api.Transformer;

/**
 *
 * @author Mathieu Bastian
 */
public class XYZTransformerPanel extends javax.swing.JPanel {

    private XYZTransformer xyzTransformer;
    private Ranking ranking;

    public XYZTransformerPanel(Transformer transformer, Ranking ranking) {
        initComponents();

        xyzTransformer = (XYZTransformer) transformer;
        this.ranking = ranking;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAxe = new javax.swing.JLabel();
        axeComboBox = new javax.swing.JComboBox();
        labelMin = new javax.swing.JLabel();
        labelMax = new javax.swing.JLabel();
        minInput = new javax.swing.JTextField();
        maxInput = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(225, 114));

        labelAxe.setText(org.openide.util.NbBundle.getMessage(XYZTransformerPanel.class, "XYZTransformerPanel.labelAxe.text")); // NOI18N

        axeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "X", "Y", "Z" }));
        axeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                axeComboBoxChangeValue(evt);
            }
        });

        labelMin.setText(org.openide.util.NbBundle.getMessage(XYZTransformerPanel.class, "XYZTransformerPanel.labelMin.text")); // NOI18N

        labelMax.setText(org.openide.util.NbBundle.getMessage(XYZTransformerPanel.class, "XYZTransformerPanel.labelMax.text")); // NOI18N

        minInput.setText(org.openide.util.NbBundle.getMessage(XYZTransformerPanel.class, "XYZTransformerPanel.minInput.text")); // NOI18N
        minInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                minInputFocusLost(evt);
            }
        });
        minInput.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                minInputPropertyChange(evt);
            }
        });

        maxInput.setText(org.openide.util.NbBundle.getMessage(XYZTransformerPanel.class, "XYZTransformerPanel.maxInput.text")); // NOI18N
        maxInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                maxInputFocusLost(evt);
            }
        });
        maxInput.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                maxInputPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelMin)
                        .addGap(7, 7, 7)
                        .addComponent(minInput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(labelMax)
                        .addGap(18, 18, 18)
                        .addComponent(maxInput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelAxe)
                        .addGap(31, 31, 31)
                        .addComponent(axeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(130, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAxe)
                    .addComponent(axeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMin)
                    .addComponent(minInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMax))
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void axeComboBoxChangeValue(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_axeComboBoxChangeValue
        xyzTransformer.setAxe(axeComboBox.getModel().getSelectedItem().toString());
    }//GEN-LAST:event_axeComboBoxChangeValue

    private void minInputPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_minInputPropertyChange
        xyzTransformer.setMinValue(new Double(minInput.getText()));
    }//GEN-LAST:event_minInputPropertyChange

    private void maxInputPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_maxInputPropertyChange
        xyzTransformer.setMaxValue(new Double(maxInput.getText()));
    }//GEN-LAST:event_maxInputPropertyChange

    private void maxInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maxInputFocusLost
        xyzTransformer.setMaxValue(new Double(maxInput.getText()));
    }//GEN-LAST:event_maxInputFocusLost

    private void minInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_minInputFocusLost
        xyzTransformer.setMinValue(new Double(minInput.getText()));
    }//GEN-LAST:event_minInputFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox axeComboBox;
    private javax.swing.JLabel labelAxe;
    private javax.swing.JLabel labelMax;
    private javax.swing.JLabel labelMin;
    private javax.swing.JTextField maxInput;
    private javax.swing.JTextField minInput;
    // End of variables declaration//GEN-END:variables
}
